{
  "openapi": "3.0.3",
  "info": {
    "title": "Nele Bank API",
    "description": "Secure banking application that integrates with the central bank and enables inter-bank transactions",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://nele.my/nele-bank/api/v1",
      "description": "Production server"
    },
    {
      "url": "/",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "User management operations"
    },
    {
      "name": "Sessions",
      "description": "Authentication operations"
    },
    {
      "name": "Accounts",
      "description": "Account management operations"
    },
    {
      "name": "Transactions",
      "description": "Transaction operations"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register a new user",
        "description": "Create a new user account with default EUR account",
        "operationId": "registerUser",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistration"
              },
              "example": {
                "name": "Miki Hiir",
                "username": "miki",
                "password": "SecurePass123"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ],
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User registered successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Miki Hiir"
                        },
                        "username": {
                          "type": "string",
                          "example": "miki"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "VALIDATION_ERROR"
                        },
                        "message": {
                          "type": "string",
                          "example": "Invalid request data"
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "field": {
                                "type": "string"
                              },
                              "message": {
                                "type": "string"
                              },
                              "code": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Username already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "example": "Username already exists"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get current user's profile",
        "description": "Retrieve the authenticated user's profile information",
        "operationId": "getCurrentUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ],
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication token is missing"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "summary": "Log in a user",
        "description": "Authenticate a user and create a new session",
        "operationId": "loginUser",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              },
              "example": {
                "username": "miki",
                "password": "SecurePass123"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                }
              }
            }
          },
          "400": {
            "description": "Error: Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "field": {
                                "type": "string"
                              },
                              "message": {
                                "type": "string"
                              },
                              "code": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": "error",
                  "error": {
                    "code": "VALIDATION_ERROR",
                    "message": "Invalid request data",
                    "details": [
                      {
                        "field": "username",
                        "message": "Required",
                        "code": "invalid_type"
                      },
                      {
                        "field": "password",
                        "message": "Required",
                        "code": "invalid_type"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Error: Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": "error",
                  "error": {
                    "code": "AUTHENTICATION_ERROR",
                    "message": "Invalid username or password"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sessions"
        ],
        "summary": "Log out current user",
        "description": "End the current user session",
        "operationId": "logoutUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully logged out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Successfully logged out"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ],
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication token is missing"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get transaction history",
        "description": "Retrieve the transaction history for the authenticated user",
        "operationId": "getTransactionHistory",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ],
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TransactionResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ],
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication token is missing"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Create a new transaction",
        "description": "Create a new internal or external transaction",
        "operationId": "createTransaction",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferRequest"
              },
              "examples": {
                "internal": {
                  "summary": "Internal transfer example",
                  "value": {
                    "fromAccountId": 1,
                    "toAccount": "1234567890",
                    "amount": 100.50,
                    "currency": "EUR",
                    "description": "Rent payment",
                    "type": "internal"
                  }
                },
                "external": {
                  "summary": "External transfer example",
                  "value": {
                    "fromAccountId": 1,
                    "toAccount": "EE123456789",
                    "toBankId": "CITIUS33",
                    "amount": 500.00,
                    "currency": "EUR",
                    "description": "International payment",
                    "type": "external"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Transaction created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "transaction": {
                      "$ref": "#/components/schemas/TransferResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or insufficient funds",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ],
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication token is missing"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Receiver not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ],
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Receiver account ABC123456789 not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The accountFrom does not belong to the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "error": "Forbidden"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactions/jwks": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get bank's public keys in JWKS format",
        "description": "Retrieve the bank's public keys for verifying transaction signatures",
        "operationId": "getJWKS",
        "security": [],
        "responses": {
          "200": {
            "description": "JWKS containing public keys",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "keys": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "kty": {
                            "type": "string"
                          },
                          "kid": {
                            "type": "string"
                          },
                          "n": {
                            "type": "string"
                          },
                          "e": {
                            "type": "string"
                          },
                          "use": {
                            "type": "string"
                          },
                          "alg": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "keys": [
                      {
                        "kty": "RSA",
                        "n": "sNO9smFz1GKJjDpjE-KTfS-Ri4O9V0sOJC7RZXXUZ3fbi3UwcD-MtQ8iek0JZEKELgjQoagugDm9PQ67FHQEdBZ__zrt6hxwA2_TAE0XjhztUJNzmw2S6vPf-TaLgWt4-mVtwNp-uAnYd_kO4xdtPBwySF9vLD4UmyXJJqXl8z3mBZ723kNkhUmxtKBRSSA8fmARDHqLN3YwU5Hd0Nvd9Mj1PYRWd1gz9wFEXqpbunQsggLuF2d5JgZdC598tyjSPrKmOODU3r53MD_0VbMTGuXAkBWauk3eEJ5byTURbtpy77aUDmB5fHEY7aSwxsOYNiCo3bXwO6GQaoOwt9hZkQ",
                        "e": "AQAB",
                        "kid": "NELE",
                        "use": "sig",
                        "alg": "RS256"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ],
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication token is missing"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "error",
                    "message": "Failed to generate JWKS"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactions/b2b": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Accept transaction from another bank",
        "description": "Process an incoming transaction from another bank",
        "operationId": "processB2BTransaction",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/B2BTransaction"
              },
              "example": {
                "jwt": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkJBTksifQ.eyJ0cmFuc2FjdGlvbklkIjoiMTIzZTQ1NjctZTg5Yi0xMmQzLWE0NTYtNDI2NjE0MTc0MDAwIiwiZnJvbUFjY291bnQiOiJFRTk4NzY1NDMyMSIsInRvQWNjb3VudCI6IjEyMzQ1Njc4OTAiLCJhbW91bnQiOjEwMDAuMDAsImN1cnJlbmN5IjoiRVVSIiwiZGVzY3JpcHRpb24iOiJCMkIgUGF5bWVudCBmb3IgU2VydmljZXMifQ.signature"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transfer accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "status": "success",
                  "message": "Transaction processed successfully"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ],
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication token is missing"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": "error",
                  "error": {
                    "code": "VALIDATION_ERROR",
                    "message": "Parsing JWT payload failed: reason here"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "error": "Account not found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error occurred during transaction processing",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "status": "error",
                    "message": "Cannot verify your signature: The jwksUrl of your bank is missing"
                  }
                }
              }
            }
          },
          "502": {
            "description": "Central Bank error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "example": "Central Bank error: Service temporarily unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountNumber}": {
      "patch": {
        "tags": [
          "Accounts"
        ],
        "summary": "Update account currency",
        "description": "Update an account's currency with automatic balance conversion",
        "operationId": "updateAccountCurrency",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "accountNumber",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Account number"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCurrencyUpdate"
              },
              "example": {
                "currency": "USD"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account currency updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCurrencyUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error: Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ]
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "field": {
                                "type": "string"
                              },
                              "message": {
                                "type": "string"
                              },
                              "code": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": "error",
                  "error": {
                    "code": "VALIDATION_ERROR",
                    "message": "Invalid request data",
                    "details": [
                      {
                        "field": "username",
                        "message": "Required",
                        "code": "invalid_type"
                      },
                      {
                        "field": "password",
                        "message": "Required",
                        "code": "invalid_type"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "error"
                      ],
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication token is missing"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "error": "Account not found"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserRegistration": {
        "type": "object",
        "required": [
          "name",
          "username",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 100,
            "pattern": "^[a-zA-Z\\s-]+$",
            "description": "Full name (can contain letters, spaces, and hyphens)"
          },
          "username": {
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Username can only contain letters, numbers, underscores, and hyphens"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "description": "Password must be at least 8 characters"
          }
        }
      },
      "UserLogin": {
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "type": "string",
            "description": "Username for login"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User password"
          }
        }
      },
      "Account": {
        "type": "object",
        "required": [
          "id",
          "accountNumber",
          "userId",
          "currency",
          "balance"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Account ID"
          },
          "accountNumber": {
            "type": "string",
            "maxLength": 50,
            "description": "Unique account number"
          },
          "userId": {
            "type": "integer",
            "description": "Owner user ID"
          },
          "currency": {
            "type": "string",
            "enum": [
              "EUR",
              "USD",
              "GBP"
            ],
            "description": "Account currency"
          },
          "balance": {
            "type": "number",
            "minimum": 0,
            "description": "Current balance"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AccountCurrencyUpdate": {
        "type": "object",
        "required": [
          "currency"
        ],
        "properties": {
          "currency": {
            "type": "string",
            "enum": [
              "EUR",
              "USD",
              "GBP"
            ],
            "description": "New currency for the account"
          }
        }
      },
      "AccountCurrencyUpdateResponse": {
        "type": "object",
        "required": [
          "message",
          "account",
          "conversionRate"
        ],
        "properties": {
          "message": {
            "type": "string",
            "example": "Account currency updated successfully"
          },
          "account": {
            "type": "object",
            "required": [
              "name",
              "balance",
              "currency",
              "number"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "Account holder name"
              },
              "balance": {
                "type": "number",
                "description": "Updated account balance in new currency"
              },
              "currency": {
                "type": "string",
                "enum": [
                  "EUR",
                  "USD",
                  "GBP"
                ],
                "description": "New account currency"
              },
              "number": {
                "type": "string",
                "description": "Account number"
              }
            }
          },
          "conversionRate": {
            "type": "string",
            "description": "Exchange rate used for conversion"
          }
        }
      },
      "TransferRequest": {
        "type": "object",
        "required": [
          "fromAccountId",
          "toAccount",
          "amount",
          "currency",
          "type"
        ],
        "properties": {
          "fromAccountId": {
            "type": "integer",
            "description": "Source account ID",
            "example": 1
          },
          "toAccount": {
            "type": "string",
            "maxLength": 50,
            "description": "Destination account number",
            "example": "1234567890"
          },
          "toBankId": {
            "type": "string",
            "maxLength": 10,
            "description": "Destination bank ID (only for external transfers)",
            "example": "CITIUS33"
          },
          "amount": {
            "type": "number",
            "minimum": 0.01,
            "description": "Transfer amount",
            "example": 100.50
          },
          "currency": {
            "type": "string",
            "enum": [
              "EUR",
              "USD",
              "GBP"
            ],
            "description": "Currency of the transfer (must match both accounts for internal transfers)",
            "example": "EUR"
          },
          "description": {
            "type": "string",
            "maxLength": 200,
            "description": "Optional transfer description",
            "example": "Rent payment"
          },
          "type": {
            "type": "string",
            "enum": [
              "internal",
              "external"
            ],
            "description": "Type of transfer"
          }
        },
        "example": {
          "fromAccountId": 1,
          "toAccount": "1234567890",
          "amount": 100.50,
          "currency": "EUR",
          "description": "Rent payment",
          "type": "internal"
        }
      },
      "TransferResponse": {
        "type": "object",
        "required": [
          "transactionId",
          "status",
          "amount",
          "currency",
          "fromAccount",
          "toAccount"
        ],
        "properties": {
          "transactionId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique transaction identifier",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "completed",
              "failed"
            ],
            "description": "Transaction status"
          },
          "amount": {
            "type": "number",
            "description": "Transfer amount",
            "example": 100.50
          },
          "currency": {
            "type": "string",
            "enum": [
              "EUR",
              "USD",
              "GBP"
            ],
            "description": "Transfer currency",
            "example": "EUR"
          },
          "fromAccount": {
            "type": "string",
            "description": "Source account number",
            "example": "1234567890"
          },
          "toAccount": {
            "type": "string",
            "description": "Destination account number",
            "example": "9876543210"
          },
          "toBankId": {
            "type": "string",
            "description": "Destination bank ID (only for external transfers)",
            "example": "CITIUS33"
          },
          "description": {
            "type": "string",
            "description": "Transfer description",
            "example": "Rent payment"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Transaction creation timestamp"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Transaction completion timestamp"
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message if transaction failed"
          }
        },
        "example": {
          "transactionId": "123e4567-e89b-12d3-a456-426614174000",
          "status": "completed",
          "amount": 100.50,
          "currency": "EUR",
          "fromAccount": "1234567890",
          "toAccount": "9876543210",
          "description": "Rent payment",
          "createdAt": "2025-03-16T11:05:00Z",
          "completedAt": "2025-03-16T11:05:02Z"
        }
      },
      "TransactionResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "format": "uuid",
            "description": "Unique transaction identifier",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "inProgress",
              "completed",
              "failed"
            ],
            "description": "Transaction status"
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message if transaction failed",
            "example": "Insufficient funds"
          },
          "amount": {
            "type": "number",
            "description": "Transaction amount",
            "example": 100.50
          },
          "currency": {
            "type": "string",
            "enum": [
              "EUR",
              "USD",
              "GBP"
            ],
            "description": "Transaction currency",
            "example": "EUR"
          },
          "fromAccount": {
            "type": "string",
            "description": "Source account number",
            "example": "1234567890"
          },
          "toAccount": {
            "type": "string",
            "description": "Destination account number",
            "example": "9876543210"
          },
          "description": {
            "type": "string",
            "description": "Transaction description",
            "example": "Monthly rent payment"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Transaction creation timestamp",
            "example": "2025-03-16T11:05:00Z"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Transaction completion timestamp",
            "example": "2025-03-16T11:05:02Z"
          }
        },
        "example": {
          "transactionId": "123e4567-e89b-12d3-a456-426614174002",
          "status": "completed",
          "amount": 1000.00,
          "currency": "EUR",
          "fromAccount": "1234567890",
          "toAccount": "9876543210",
          "description": "Investment transfer",
          "createdAt": "2025-03-16T11:05:00Z",
          "completedAt": "2025-03-16T11:05:02Z"
        }
      },
      "B2BTransaction": {
        "type": "object",
        "required": [
          "jwt"
        ],
        "properties": {
          "jwt": {
            "type": "string",
            "description": "JWT token containing the transaction details and signature",
            "example": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkJBTksifQ.eyJ0cmFuc2FjdGlvbklkIjoiMTIzZTQ1NjctZTg5Yi0xMmQzLWE0NTYtNDI2NjE0MTc0MDAwIiwiZnJvbUFjY291bnQiOiJFRTk4NzY1NDMyMSIsInRvQWNjb3VudCI6IjEyMzQ1Njc4OTAiLCJhbW91bnQiOjEwMDAuMDAsImN1cnJlbmN5IjoiRVVSIiwiZGVzY3JpcHRpb24iOiJCMkIgUGF5bWVudCBmb3IgU2VydmljZXMifQ.signature"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token obtained from the /sessions endpoint"
      }
    }
  }
}
